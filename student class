import java.util.ArrayList;
import java.util.Scanner;

class Student {
    // Student attributes
    String studentName, rollNumber, registerNumber, department, year, section, attendancePercentage, gender;
    String advisorName, studentMail, officialMail, studentContact, parentContact;
    int dateOfBirth;

    // Constructor to initialize student details
    Student(String studentName, String rollNumber, String registerNumber, String department, int dateOfBirth, 
            String year, String section, String attendancePercentage, String gender, 
            String advisorName, String studentMail, String officialMail, 
            String studentContact, String parentContact) {
        
        this.studentName = studentName;
        this.rollNumber = rollNumber;
        this.registerNumber = registerNumber;
        this.department = department;
        this.dateOfBirth = dateOfBirth;
        this.year = year;
        this.section = section;
        this.attendancePercentage = attendancePercentage;
        this.gender = gender;
        this.advisorName = advisorName;
        this.studentMail = studentMail;
        this.officialMail = officialMail;
        this.studentContact = studentContact;
        this.parentContact = parentContact;
    }

    // Method to display student details
    public void displayDetails() {
        System.out.println("\n==========================================");
        System.out.println("           STUDENT DETAILS                ");
        System.out.println("==========================================");
        System.out.println("Name           : " + studentName);
        System.out.println("Roll Number    : " + rollNumber);
        System.out.println("Register Number: " + registerNumber);
        System.out.println("Department     : " + department);
        System.out.println("DOB            : " + dateOfBirth);
        System.out.println("Year           : " + year);
        System.out.println("Section        : " + section);
        System.out.println("Attendance     : " + attendancePercentage);
        System.out.println("Gender         : " + gender);
        System.out.println("Advisor        : " + advisorName);
        System.out.println("Student Mail   : " + studentMail);
        System.out.println("Official Mail  : " + officialMail);
        System.out.println("Student Contact: " + studentContact);
        System.out.println("Parent Contact : " + parentContact);
        System.out.println("==========================================\n");
    }

    // Method to update student details
    public void updateDetails() {
        Scanner sc = new Scanner(System.in);
        System.out.print("\nEnter New Student Name: ");
        this.studentName = sc.nextLine();
        System.out.print("Enter New Student Contact: ");
        this.studentContact = sc.nextLine();
        System.out.print("Enter New Parent Contact: ");
        this.parentContact = sc.nextLine();
        System.out.println("‚úÖ Student Details Updated Successfully!\n");
    }
}

// OutPass Class
class OutPass {
    // OutPass attributes
    String rollNumber, outPassNumber, outDate, outTime, reason, status, inDate, inTime;

    // Constructor to initialize OutPass details
    OutPass(String rollNumber, String outPassNumber, String outDate, String outTime, 
            String reason, String status, String inDate, String inTime) {
        this.rollNumber = rollNumber;
        this.outPassNumber = outPassNumber;
        this.outDate = outDate;
        this.outTime = outTime;
        this.reason = reason;
        this.status = status;
        this.inDate = inDate;
        this.inTime = inTime;
    }

    // Method to display OutPass details
    public void displayOutPass() {
        System.out.println("\n==========================================");
        System.out.println("           OUTPASS DETAILS                 ");
        System.out.println("==========================================");
        System.out.println("OutPass No.    : " + outPassNumber);
        System.out.println("Roll Number    : " + rollNumber);
        System.out.println("Date           : " + outDate);
        System.out.println("Time           : " + outTime);
        System.out.println("Reason         : " + reason);
        System.out.println("Status         : " + status);
        System.out.println("In Date        : " + inDate);
        System.out.println("In Time        : " + inTime);
        System.out.println("==========================================\n");
    }
}

// Main class for the OutPass Management System
public class outpSS {
    static Scanner sc = new Scanner(System.in);
    static ArrayList<Student> students = new ArrayList<>();
    static ArrayList<OutPass> outPasses = new ArrayList<>();

    public static void main(String[] args) {
        while (true) {
            System.out.println("\n==========================================");
            System.out.println("      üè´ STUDENT OUTPASS MANAGEMENT SYSTEM üè´");
            System.out.println("==========================================");
            System.out.println("1Ô∏è‚É£  ‚ûú Register Student");
            System.out.println("2Ô∏è‚É£  ‚ûú Update Student Details");
            System.out.println("3Ô∏è‚É£  ‚ûú View Student Details");
            System.out.println("4Ô∏è‚É£  ‚ûú Apply for OutPass");
            System.out.println("5Ô∏è‚É£  ‚ûú Approve OutPass");
            System.out.println("6Ô∏è‚É£  ‚ûú View OutPass Details");
            System.out.println("7Ô∏è‚É£  ‚ûú Exit");
            System.out.println("==========================================");
            System.out.print("üîπ Enter your choice: ");
            
            int choice = sc.nextInt();
            sc.nextLine();

            switch (choice) {
                case 1:
                    registerStudent();
                    break;
                case 2:
                    updateStudent();
                    break;
                case 3:
                    viewStudent();
                    break;
                case 4:
                    applyOutPass();
                    break;
                case 5:
                    approveOutPass();
                    break;
                case 6:
                    System.out.println("\nüîπ OutPass Details üîπ");
                    viewOutPass();
                    break;
                case 7:
                    System.out.println("‚úÖ Exiting the system... Have a great day!");
                    return;
                default:
                    System.out.println("‚ùå Invalid choice! Please try again.");
            }
        }
    }

    // Method to register a new student
    public static void registerStudent() {
        System.out.println("\nüîπ Enter Student Details üîπ");
        System.out.print("Name: ");
        String name = sc.nextLine();
        System.out.print("Roll Number: ");
        String rollNumber = sc.nextLine();
        System.out.print("Register Number: ");
        String registerNumber = sc.nextLine();
        System.out.print("Department: ");
        String department = sc.nextLine();
        System.out.print("Date of Birth (YYYYMMDD): ");
        int dob = sc.nextInt();
        sc.nextLine();
        System.out.print("Year: ");
        String year = sc.nextLine();
        System.out.print("Section: ");
        String section = sc.nextLine();
        System.out.print("Attendance Percentage: ");
        String attendance = sc.nextLine();
        System.out.print("Gender: ");
        String gender = sc.nextLine();
        System.out.print("Advisor Name: ");
        String advisor = sc.nextLine();
        System.out.print("Student Mail: ");
        String studentMail = sc.nextLine();
        System.out.print("Official Mail: ");
        String officialMail = sc.nextLine();
        System.out.print("Student Contact: ");
        String studentContact = sc.nextLine();
        System.out.print("Parent Contact: ");
        String parentContact = sc.nextLine();

        students.add(new Student(name, rollNumber, registerNumber, department, dob, year, section, attendance, gender, advisor, studentMail, officialMail, studentContact, parentContact));
        System.out.println("‚úÖ Student Registered Successfully!\n");
    }

    // Method to update student details
    public static void updateStudent() {
        System.out.print("\nüîπ Enter Roll Number to Update: ");
        String roll = sc.nextLine();

        for (Student s : students) {
            if (s.rollNumber.equals(roll)) {
                s.updateDetails();
                return;
            }
        }
        System.out.println("‚ùå Student Not Found!");
    }

    // Method to view student details
    public static void viewStudent() {
        System.out.print("\nüîπ Enter Roll Number to View Details: ");
        String roll = sc.nextLine();

        for (Student s : students) {
            if (s.rollNumber.equals(roll)) {
                s.displayDetails();
                return;
            }
        }
        System.out.println("‚ùå Student Not Found!");
    }

    // Method to view all OutPass details
    public static void viewOutPass() {
        for (OutPass o : outPasses) {
            o.displayOutPass();
        }
    }

    // Method to apply for an OutPass
    public static void applyOutPass() {
        System.out.print("\nüîπ Enter Roll Number: ");
        String roll = sc.nextLine();
        System.out.print("Reason: ");
        String reason = sc.nextLine();

        outPasses.add(new OutPass(roll, "OP-" + (outPasses.size() + 1), "2025-03-02", "10:00 AM", reason, "Pending", "", ""));
        System.out.println("‚úÖ OutPass Request Submitted!");
    }

    // Method to approve an OutPass
    public static void approveOutPass() {
        System.out.print("\nüîπ Enter OutPass Number to Approve: ");
        String passNum = sc.nextLine();

        for (OutPass o : outPasses) {
            if (o.outPassNumber.equals(passNum)) {
                o.status = "Approved ‚úÖ";
                System.out.println("‚úÖ OutPass Approved!");
                return;
            }
        }
        System.out.println("‚ùå OutPass Not Found!");
    }
}

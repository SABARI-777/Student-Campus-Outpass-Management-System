import java.util.ArrayList;
import java.util.Scanner;
import java.time.LocalDate;
import java.time.LocalTime;

class Student {
    String studentName, rollNumber, registerNumber, department, year, section, gender;
    String advisorName, studentMail, officialMail, studentContact, parentContact;
    int dateOfBirth;
    double cgpa;
    int attendancePercentage;
    int outpassDaysTaken;
    boolean isDisciplined; // New field to check if the student is disciplined
    boolean isInPlacement; // New field to check if the student is in placement

    Student(String studentName, String rollNumber, String registerNumber, String department, int dateOfBirth,
            String year, String section, int attendancePercentage, String gender, double cgpa,
            String advisorName, String studentMail, String officialMail,
            String studentContact, String parentContact, boolean isDisciplined, boolean isInPlacement) {

        this.studentName = studentName;
        this.rollNumber = rollNumber;
        this.registerNumber = registerNumber;
        this.department = department;
        this.dateOfBirth = dateOfBirth;
        this.year = year;
        this.section = section;
        this.attendancePercentage = attendancePercentage;
        this.gender = gender;
        this.cgpa = cgpa;
        this.advisorName = advisorName;
        this.studentMail = studentMail;
        this.officialMail = officialMail;
        this.studentContact = studentContact;
        this.parentContact = parentContact;
        this.outpassDaysTaken = 0;
        this.isDisciplined = isDisciplined; // Initialize discipline status
        this.isInPlacement = isInPlacement; // Initialize placement status
    }

    // Display student details
    public void displayDetails() {
        System.out.println("\n╔══════════════════════════════════════════╗");
        System.out.println("║           STUDENT DETAILS                ║");
        System.out.println("╠══════════════════════════════════════════╣");
        System.out.println("║ Name           : " + studentName);
        System.out.println("║ Roll Number    : " + rollNumber);
        System.out.println("║ Register Number: " + registerNumber);
        System.out.println("║ Department     : " + department);
        System.out.println("║ DOB            : " + dateOfBirth);
        System.out.println("║ Year           : " + year);
        System.out.println("║ Section        : " + section);
        System.out.println("║ Attendance     : " + attendancePercentage + "%");
        System.out.println("║ CGPA           : " + cgpa);
        System.out.println("║ Gender         : " + gender);
        System.out.println("║ Advisor        : " + advisorName);
        System.out.println("║ Student Mail   : " + studentMail);
        System.out.println("║ Official Mail  : " + officialMail);
        System.out.println("║ Student Contact: " + studentContact);
        System.out.println("║ Parent Contact : " + parentContact);
        System.out.println("║ OutPass Days   : " + outpassDaysTaken);
        System.out.println("║ Is Disciplined : " + (isDisciplined ? "Yes" : "No"));
        System.out.println("║ In Placement   : " + (isInPlacement ? "Yes" : "No"));
        System.out.println("╚══════════════════════════════════════════╝\n");
    }
}

class OutPass {
    String rollNumber, outPassNumber, outDate, outTime, reason, status, inDate, inTime;
    boolean advisorApproved, hodApproved, wardenApproved, securityGate1Approved, securityGate2Approved;
    boolean placementCoordinatorApproved, placementHeadApproved; // New fields for placement approvals
    String advisorSignature, hodSignature, wardenSignature, securityGate1Signature, securityGate2Signature;
    String placementCoordinatorSignature, placementHeadSignature; // New fields for placement signatures

    OutPass(String rollNumber, String outPassNumber, String outDate, String outTime,
            String reason, String status, String inDate, String inTime) {
        this.rollNumber = rollNumber;
        this.outPassNumber = outPassNumber;
        this.outDate = outDate;
        this.outTime = outTime;
        this.reason = reason;
        this.status = status;
        this.inDate = inDate;
        this.inTime = inTime;
        this.advisorApproved = false;
        this.hodApproved = false;
        this.wardenApproved = false;
        this.securityGate1Approved = false;
        this.securityGate2Approved = false;
        this.placementCoordinatorApproved = false;
        this.placementHeadApproved = false;
    }

    // Display OutPass Details
    public void displayOutPass() {
        System.out.println("\n╔════════════════════════════════════════════════════════════════════════════════════╗");
        System.out.println("║           OUTPASS DETAILS                                                            ║");
        System.out.println("╠══════════════════════════════════════════════════════════════════════════════════════╣");
        System.out.println("  ║ OutPass No.    :"  + outPassNumber);
        System.out.println("  ║ Roll Number    : " + rollNumber); 
        System.out.println("  ║ Date           : " + outDate);
        System.out.println("  ║ Time           : " + outTime);
        System.out.println("  ║ Reason         : " + reason);
        System.out.println("  ║ Status         : " + status);
        System.out.println("  ║ Advisor Approved: " + (advisorApproved ? "Yes" : "No"));
        System.out.println("  ║ HOD Approved   : " + (hodApproved ? "Yes" : "No"));
        System.out.println("  ║ Warden Approved: " + (wardenApproved ? "Yes" : "No"));
        System.out.println("  ║ Placement Coordinator Approved: "+(placementCoordinatorApproved ? "Yes":"No"));
        System.out.println("  ║ Placement Head Approved: " + (placementHeadApproved ? "Yes" : "No"));
        System.out.println("  ║ Security Gate 1 Approved: " + (securityGate1Approved ? "Yes" : "No"));
        System.out.println("  ║ Security Gate 2 Approved: " + (securityGate2Approved ? "Yes" : "No"));
        System.out.println("  ║ In Date        : " + inDate);
        System.out.println("  ║ In Time        : " + inTime);
        System.out.println("╚════════════════════════════════════════════════════════════════════════════════════╝\n");
    }
}

public class outpSS {
    static Scanner sc = new Scanner(System.in);
    static ArrayList<Student> students = new ArrayList<>();
    static ArrayList<OutPass> outPasses = new ArrayList<>();

    public static void main(String[] args) {
        while (true) {
            System.out.println("\n╔══════════════════════════════════════════╗");
            System.out.println("║ 🏫 STUDENT OUTPASS MANAGEMENT SYSTEM 🏫 ║");
            System.out.println("╠══════════════════════════════════════════╣");
            System.out.println("║ 1️⃣  ➜ Register Student                  ║");
            System.out.println("║ 2️⃣  ➜ Apply for OutPass                 ║");
            System.out.println("║ 3️⃣  ➜ Advisor Approval                  ║");
            System.out.println("║ 4️⃣  ➜ Placement Coordinator Approval    ║");
            System.out.println("║ 5️⃣  ➜ Placement Head Approval           ║");
            System.out.println("║ 6️⃣  ➜ HOD Approval                     ║");
            System.out.println("║ 7️⃣  ➜ Warden Approval                  ║");
            System.out.println("║ 8️⃣  ➜ Security Gate 1 Approval         ║");
            System.out.println("║ 9️⃣  ➜ Security Gate 2 Approval         ║");
            System.out.println("║ 🔟  ➜ Check-In/Check-Out               ║");
            System.out.println("║ 🔟1 ➜ View Student Details             ║");
            System.out.println("║ 🔟2 ➜ View OutPass Details             ║");
            System.out.println("║ 🔟3 ➜ Exit                             ║");
            System.out.println("╚══════════════════════════════════════════╝");
            System.out.print("🔹 Enter your choice: ");

            int choice = sc.nextInt();
            sc.nextLine();

            switch (choice) {
                case 1:
                    registerStudent();
                    break;
                case 2:
                    applyOutPass();
                    break;
                case 3:
                    advisorApproval();
                    break;
                case 4:
                    placementCoordinatorApproval();
                    break;
                case 5:
                    placementHeadApproval();
                    break;
                case 6:
                    hodApproval();
                    break;
                case 7:
                    wardenApproval();
                    break;
                case 8:
                    securityGate1Approval();
                    break;
                case 9:
                    securityGate2Approval();
                    break;
                case 10:
                    checkInCheckOut();
                    break;
                case 11:
                    viewStudent();
                    break;
                case 12:
                    viewOutPass();
                    break;
                case 13:
                    System.out.println("✅ Exiting the system... Have a great day!");
                    return;
                default:
                    System.out.println("❌ Invalid choice! Please try again.");
            }
        }
    }

    // Method to register a new student
    public static void registerStudent() {
        System.out.println("\n🔹 Enter Student Details 🔹");
        System.out.print("Name: ");
        String name = sc.nextLine();
        System.out.print("Roll Number: ");
        String rollNumber = sc.nextLine();
        System.out.print("Register Number: ");
        String registerNumber = sc.nextLine();
        System.out.print("Department: ");
        String department = sc.nextLine();
        System.out.print("Date of Birth (YYYYMMDD): ");
        int dob = sc.nextInt();
        sc.nextLine();
        System.out.print("Year: ");
        String year = sc.nextLine();
        System.out.print("Section: ");
        String section = sc.nextLine();
        System.out.print("Attendance Percentage: ");
        int attendance = sc.nextInt();
        sc.nextLine();
        System.out.print("CGPA: ");
        double cgpa = sc.nextDouble();
        sc.nextLine();
        System.out.print("Gender: ");
        String gender = sc.nextLine();
        System.out.print("Advisor Name: ");
        String advisor = sc.nextLine();
        System.out.print("Student Mail: ");
        String studentMail = sc.nextLine();
        System.out.print("Official Mail: ");
        String officialMail = sc.nextLine();
        System.out.print("Student Contact: ");
        String studentContact = sc.nextLine();
        System.out.print("Parent Contact: ");
        String parentContact = sc.nextLine();
        System.out.print("Is the student disciplined? (Yes/No): ");
        boolean isDisciplined = sc.nextLine().equalsIgnoreCase("Yes");
        System.out.print("Is the student in placement? (Yes/No): ");
        boolean isInPlacement = sc.nextLine().equalsIgnoreCase("Yes");

        students.add(new Student(name, rollNumber, registerNumber, department, dob, year, section, attendance, gender, cgpa, advisor, studentMail, officialMail, studentContact, parentContact, isDisciplined, isInPlacement));
        System.out.println("✅ Student Registered Successfully!\n");
    }

    // Method to apply for an OutPass
    public static void applyOutPass() {
        System.out.print("\n🔹 Enter Roll Number: ");
        String roll = sc.nextLine();
        System.out.print("Reason: ");
        String reason = sc.nextLine();

        // Get current date and time
        String currentDate = LocalDate.now().toString();
        String currentTime = LocalTime.now().toString().substring(0, 5); // HH:MM format

        outPasses.add(new OutPass(roll, "OP-" + (outPasses.size() + 1), currentDate, currentTime, reason, "Pending", "", ""));
        System.out.println("✅ OutPass Request Submitted!");
    }

    // Method for Advisor Approval
    public static void advisorApproval() {
        System.out.print("\n🔹 Enter OutPass Number to Approve: ");
        String passNum = sc.nextLine();

        for (OutPass o : outPasses) {
            if (o.outPassNumber.equals(passNum)) {
                System.out.print("Call Parent for Permission (Yes/No): ");
                String permission = sc.nextLine();
                if (permission.equalsIgnoreCase("Yes")) {
                    System.out.print("Is the student disciplined? (Yes/No): ");
                    String disciplined = sc.nextLine();
                    if (disciplined.equalsIgnoreCase("Yes")) {
                        System.out.print("Advisor Signature: ");
                        o.advisorSignature = sc.nextLine();
                        o.advisorApproved = true;
                        o.status = "Advisor Approved";
                        System.out.println("✅ Advisor Approved!");
                    } else {
                        System.out.println("❌ Student is not disciplined. OutPass not approved.");
                    }
                } else {
                    System.out.println("❌ Parent Permission Denied!");
                }
                return;
            }
        }
        System.out.println("❌ OutPass Not Found!");
    }

    // Method for Placement Coordinator Approval
    public static void placementCoordinatorApproval() {
        System.out.print("\n🔹 Enter OutPass Number to Approve: ");
        String passNum = sc.nextLine();

        for (OutPass o : outPasses) {
            if (o.outPassNumber.equals(passNum)) {
                for (Student s : students) {
                    if (s.rollNumber.equals(o.rollNumber) && s.isInPlacement) {
                        System.out.print("Placement Coordinator Signature: ");
                        o.placementCoordinatorSignature = sc.nextLine();
                        o.placementCoordinatorApproved = true;
                        o.status = "Placement Coordinator Approved";
                        System.out.println("✅ Placement Coordinator Approved!");
                        return;
                    }
                }
                System.out.println("❌ Student Not in Placement!");
                return;
            }
        }
        System.out.println("❌ OutPass Not Found!");
    }

    // Method for Placement Head Approval
    public static void placementHeadApproval() {
        System.out.print("\n🔹 Enter OutPass Number to Approve: ");
        String passNum = sc.nextLine();

        for (OutPass o : outPasses) {
            if (o.outPassNumber.equals(passNum)) {
                for (Student s : students) {
                    if (s.rollNumber.equals(o.rollNumber) && s.isInPlacement) {
                        System.out.print("Placement Head Signature: ");
                        o.placementHeadSignature = sc.nextLine();
                        o.placementHeadApproved = true;
                        o.status = "Placement Head Approved";
                        System.out.println("✅ Placement Head Approved!");
                        return;
                    }
                }
                System.out.println("❌ Student Not in Placement!");
                return;
            }
        }
        System.out.println("❌ OutPass Not Found!");
    }

    // Method for HOD Approval
    public static void hodApproval() {
        System.out.print("\n🔹 Enter OutPass Number to Approve: ");
        String passNum = sc.nextLine();

        for (OutPass o : outPasses) {
            if (o.outPassNumber.equals(passNum)) {
                if (o.advisorApproved && (!o.placementCoordinatorApproved || !o.placementHeadApproved)) {
                    System.out.print("HOD Signature: ");
                    o.hodSignature = sc.nextLine();
                    o.hodApproved = true;
                    o.status = "HOD Approved";
                    System.out.println("✅ HOD Approved!");
                } else {
                    System.out.println("❌ Advisor or Placement Approvals Pending!");
                }
                return;
            }
        }
        System.out.println("❌ OutPass Not Found!");
    }

    // Method for Warden Approval
    public static void wardenApproval() {
        System.out.print("\n🔹 Enter OutPass Number to Approve: ");
        String passNum = sc.nextLine();

        for (OutPass o : outPasses) {
            if (o.outPassNumber.equals(passNum)) {
                if (o.hodApproved) {
                    System.out.print("Call Parent for Permission (Yes/No): ");
                    String permission = sc.nextLine();
                    if (permission.equalsIgnoreCase("Yes")) {
                        System.out.print("Warden Signature: ");
                        o.wardenSignature = sc.nextLine();
                        o.wardenApproved = true;
                        o.status = "Warden Approved";
                        System.out.println("✅ Warden Approved!");
                    } else {
                        System.out.println("❌ Parent Permission Denied!");
                    }
                } else {
                    System.out.println("❌ HOD Approval Pending!");
                }
                return;
            }
        }
        System.out.println("❌ OutPass Not Found!");
    }

    // Method for Security Gate 1 Approval
    public static void securityGate1Approval() {
        System.out.print("\n🔹 Enter OutPass Number to Approve: ");
        String passNum = sc.nextLine();

        for (OutPass o : outPasses) {
            if (o.outPassNumber.equals(passNum)) {
                if (o.wardenApproved) {
                    System.out.print("Security Gate 1 Signature: ");
                    o.securityGate1Signature = sc.nextLine();
                    o.securityGate1Approved = true;
                    o.status = "Security Gate 1 Approved";
                    System.out.println("✅ Security Gate 1 Approved!");
                } else {
                    System.out.println("❌ Warden Approval Pending!");
                }
                return;
            }
        }
        System.out.println("❌ OutPass Not Found!");
    }

    // Method for Security Gate 2 Approval
    public static void securityGate2Approval() {
        System.out.print("\n🔹 Enter OutPass Number to Approve: ");
        String passNum = sc.nextLine();

        for (OutPass o : outPasses) {
            if (o.outPassNumber.equals(passNum)) {
                if (o.securityGate1Approved) {
                    System.out.print("Security Gate 2 Signature: ");
                    o.securityGate2Signature = sc.nextLine();
                    o.securityGate2Approved = true;
                    o.status = "Security Gate 2 Approved";
                    System.out.println("✅ Security Gate 2 Approved!");
                } else {
                    System.out.println("❌ Security Gate 1 Approval Pending!");
                }
                return;
            }
        }
        System.out.println("❌ OutPass Not Found!");
    }

    // Method for Check-In/Check-Out
    public static void checkInCheckOut() {
        System.out.print("\n🔹 Enter OutPass Number: ");
        String passNum = sc.nextLine();

        for (OutPass o : outPasses) {
            if (o.outPassNumber.equals(passNum)) {
                if (o.securityGate2Approved) {
                    // Get current date and time for check-in
                    String currentDate = LocalDate.now().toString();
                    String currentTime = LocalTime.now().toString().substring(0, 5); // HH:MM format

                    System.out.print("Enter Check-In Date (YYYY-MM-DD): ");
                    o.inDate = sc.nextLine();
                    System.out.print("Enter Check-In Time (HH:MM): ");
                    o.inTime = sc.nextLine();
                    o.status = "Completed";
                    System.out.println("✅ Check-In Recorded!");

                    // Check if the return date is delayed
                    if (!o.inDate.equals(o.outDate)) {
                        System.out.println("⚠️ Return Date Delayed! Informing Advisor, Parents, and Others...");
                        // Notify advisor, parents, and others (you can add more logic here)
                        System.out.println("✅ Notifications Sent!");
                    }
                } else {
                    System.out.println("❌ Security Gate 2 Approval Pending!");
                }
                return;
            }
        }
        System.out.println("❌ OutPass Not Found!");
    }

    // Method to view student details
    public static void viewStudent() {
        System.out.print("\n🔹 Enter Roll Number to View Details: ");
        String roll = sc.nextLine();

        for (Student s : students) {
            if (s.rollNumber.equals(roll)) {
                s.displayDetails();
                return;
            }
        }
        System.out.println("❌ Student Not Found!");
    }

    // Method to view all OutPass details
    public static void viewOutPass() {
        for (OutPass o : outPasses) {
            o.displayOutPass();
        }
    }
}
